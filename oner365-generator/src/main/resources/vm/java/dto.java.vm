package ${packageName}.dto;

import java.io.Serializable;
#if($column.javaType != 'BigDecimal')
import java.math.BigDecimal;
#end
#if($column.javaType != 'LocalDate')
import java.time.LocalDate;
#end
#if($column.javaType != 'LocalDateTime')
import java.time.LocalDateTime;
#end

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#if($column.javaType != 'StatusEnum')
import com.oner365.common.enums.StatusEnum;
#end

/**
 * ${functionName} 对象 ${tableName}
 * 
 * @author ${author}
 */
 @ApiModel(value = "${functionName}")
public class ${ClassName}Dto implements Serializable {

    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
    /** $column.columnComment */
#if($column.columnName == 'id')
    @ApiModelProperty(value = "$column.columnComment")
#else
    @ApiModelProperty(value = "$column.columnComment", required =#if($column.isRequired == '1') true#else false#end)
#end
#if($column.javaType == 'json')
    private String $column.javaField;
#else
    private $column.javaType $column.javaField;
#end  
    
#end
#foreach ($column in $columns)
#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
#set($AttrName=$column.javaField)
#else
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#end
#if($column.javaType == 'json')
	public void set${AttrName}(String $column.javaField) {
        this.$column.javaField = $column.javaField;
    }

    public String get${AttrName}() {
        return $column.javaField;
    }
#else
    public void set${AttrName}($column.javaType $column.javaField) {
        this.$column.javaField = $column.javaField;
    }

    public $column.javaType get${AttrName}() {
        return $column.javaField;
    }
#end    
#end

}
