package ${packageName}.entity;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
#foreach ($column in $columns)
#if($column.columnName == 'id' && $column.javaType != 'String')
import javax.persistence.GenerationType;
#end
#end
import javax.persistence.Id;
import javax.persistence.Table;

#foreach ($column in $columns)
#if($column.columnName == 'id' && $column.javaType == 'String')
import org.hibernate.annotations.GenericGenerator;
#end
#end
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * ${functionName} 对象 ${tableName}
 * 
 * @author ${author}
 */
@Entity
@Table(name = "${tableName}")
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
public class ${ClassName} implements Serializable {

    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
    /** $column.columnComment */
#if($column.columnName == 'id')
#if($column.javaType == 'String')
    @Id
    @GeneratedValue(generator = "generator")
    @GenericGenerator(name = "generator", strategy = "uuid")
#else
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
#end
#else
    @Column(#if($column.isRequired == '1') name = "$column.columnName", nullable = false#else name = "$column.columnName"#end)
#end
    private $column.javaType $column.javaField;
    
#end
#foreach ($column in $columns)
#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
#set($AttrName=$column.javaField)
#else
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#end
    public void set${AttrName}($column.javaType $column.javaField) {
        this.$column.javaField = $column.javaField;
    }

    public $column.javaType get${AttrName}() {
        return $column.javaField;
    }
#end

}
